package main

import (
	"testing"
)

func TestValidSudoku(t *testing.T) {
	tests := []struct {
		a        [][]byte
		expected bool
	}{
		{[][]byte{{'5', '3', '.', '.', '7', '.', '.', '.', '.'}, {'6', '.', '.', '1', '9', '5', '.', '.', '.'}, {'.', '9', '8', '.', '.', '.', '.', '6', '.'}, {'8', '.', '.', '.', '6', '.', '.', '.', '3'}, {'4', '.', '.', '8', '.', '3', '.', '.', '1'}, {'7', '.', '.', '.', '2', '.', '.', '.', '6'}, {'.', '6', '.', '.', '.', '.', '2', '8', '.'}, {'.', '.', '.', '4', '1', '9', '.', '.', '5'}, {'.', '.', '.', '.', '8', '.', '.', '7', '9'}}, true},
		{[][]byte{{'8', '3', '.', '.', '7', '.', '.', '.', '.'}, {'6', '.', '.', '1', '9', '5', '.', '.', '.'}, {'.', '9', '8', '.', '.', '.', '.', '6', '.'}, {'8', '.', '.', '.', '6', '.', '.', '.', '3'}, {'4', '.', '.', '8', '.', '3', '.', '.', '1'}, {'7', '.', '.', '.', '2', '.', '.', '.', '6'}, {'.', '6', '.', '.', '.', '.', '2', '8', '.'}, {'.', '.', '.', '4', '1', '9', '.', '.', '5'}, {'.', '.', '.', '.', '8', '.', '.', '7', '9'}}, false},
		{[][]byte{{'.', '.', '5', '.', '.', '.', '.', '.', '.'}, {'1', '.', '.', '2', '.', '.', '.', '.', '.'}, {'.', '.', '6', '.', '.', '3', '.', '.', '.'}, {'8', '.', '.', '.', '.', '.', '.', '.', '.'}, {'3', '.', '1', '5', '2', '.', '.', '.', '.'}, {'.', '.', '.', '.', '.', '.', '.', '4', '.'}, {'.', '.', '6', '.', '.', '.', '.', '.', '.'}, {'.', '.', '.', '.', '.', '.', '.', '9', '.'}, {'.', '.', '.', '.', '.', '.', '.', '.', '.'}}, false},
	}

	for _, tt := range tests {
		res := isValidSudoku(tt.a)
		if res != tt.expected {
			t.Errorf("isValidSudoku(%v) = %v; but got %v", tt.a, tt.expected, res)
		}
	}
}
